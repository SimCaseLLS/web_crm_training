@model TrainingCentersCRM.Models.Vacancy

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Vacancy</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organization, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Organization)
                @Html.ValidationMessageFor(model => model.Organization)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Wages, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Wages)
                @Html.ValidationMessageFor(model => model.Wages)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Additionally, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Additionally)
                @Html.ValidationMessageFor(model => model.Additionally)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Link)
                @Html.ValidationMessageFor(model => model.Link)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            List<TrainingCentersCRM.Models.ViewModels.RelatedQualifications> qualifications = ViewBag.Qualifications;
                            if (qualifications != null)
                            {
                                foreach (var qualification in qualifications)
                                {
                                    if (cnt++ % 3 == 0)
                                    {
                                        @:</tr><tr>
                                    }
                                    @:<td hidden="true">
                                        <input type="checkbox"
                                               name="selectedQualifications"
                                               value="@qualification.QualificationID"
                                               @(Html.Raw(qualification.Assigned ? "checked=\"checked\"" : "")) />
                                        @:  @qualification.Title
                                        @:</td>
                                }
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div id="qualificationTree" style="width: 400px; overflow-x: scroll; white-space: nowrap; float: left"></div>

@section Scripts {
    <script src="~/Scripts/vacancyTree.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
